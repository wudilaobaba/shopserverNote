RuntimeExcetion 运行时异常
Exception 编译时异常


设置http状态码的两种方式：在GlobalException类中进行设置
  1.加@ResponseStatus(code=Http)  -  未知异常
  2.自己设置  -  已知异常


将类与配置文件进行关联：看core/configertion/ExceptionCodeConfigertion.class



层与层之间要通过接口进行连接的原则：
如果某个层中的业务逻辑后期需要变动，就要用接口进行连接，可以避免服务层逻辑变化导致控制层代码也要进行修改


创建数据
1.可视化管理工具(navicat,mysql,workbench)
2.手写sql语句
3.使用模型类JPA  推荐
安装mysql

JPA：就相当于写一个类，然后每一个类就是一个表
JPA步骤： ORM方式创建数据表
  01.在model包中创建类
    package com.whj.shop.shopserver.model;
    //一个类就是数据库下面的一张表
    import javax.persistence.Entity;
    import javax.persistence.Id;
    @Entity
    public class Banner {
      @Id
      private long id;
      private String name;
      private String discription;
      private String img;
      private String title;
    }
  02.在项目resource目录下创建一个application.yml文件,配置以下信息：
    spring:
      profiles:
        active: dev
      jpa:
        hibernate:
          ddl-auto: update
  03.在application-dev.yml 和 application-prod.yml中写：
    spring:
      datasource:
        url:
          jdbc:mysql://localhost:3306/whjshop?characterEncoding=utf8&serverTimezone=GMT%2B8
        username:
          root
        password:
          whjlyn938751
  04.项目一启动就会创建表
  05.查询数据库就看repository包

项目的原始配置文件可以重命名后缀为.yml文件，该文件里的格式与.properties文件不一致，但是.yml文件更好用


查询数据库



项目环境的切换文件：
  resource/conf/application-dev.yml  开发环境
  resource/conf/application-prod.yml 生产环境
  通过修改application.yml中的active: dev的值即可切换以上两个环境


项目最终的打包：
  View - Tool Windows - Maven - Lifecycle - 右键install - Run Maven Build
  打包完成以后，在项目的targer目录下可以看到一个jar包。这个包自带tomcat服务器，称为uber jar
  进入该jar包所在的目录，通过命令行：java -jar xxx.jar --spring.profiles.active=dev


设置maven的阿里云镜像：
  在pom.xml中写：
  <repositories>
      <repository>
          <id>alimaven</id>
          <name>aliyun maven</name>
          <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
      </repository>
  </repositories>


数据库设计步骤：
  1.各个表都是一个对象，处理一对一 一对多 多对多
  2.对象与对象的关系
  3.细化(字段，长度)

利用缓存，避免少去查询数据库


业务分层：
  api - service - repository
